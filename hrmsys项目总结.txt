
第一部分：mysql数据库设计（不应该随意删除数据，所以每个表都设置一个状态，删除一条数据就将其状态设置为false/0）：
1. 系统用户表
	用户id		主键自动生成
	用户名		唯一约束
	密码
	用户状态	逻辑删除
	用户注册日期

2. 部门表
	部门id		主键自动生成从1001开始
	部门名字	唯一约束
	部门描述
	部门状态	逻辑删除

3. 职位表
	职位id		主键自动生成从1001开始
	职位名称	唯一约束
	职位描述	
	职位状态	逻辑删除

4. 员工表
	员工id		主键自动生成
	员工名称	
	员工性别
	员工电话
	员工邮件	可以为空
	员工学历
	员工身份证
	员工注册日期   
	员工地址
	员工职位id	外键
	员工部门id	外键

5. 公告表
	公告id		主键自动生成
	公告名字
	公告描述		新增的
	公共内容
	公告创建时间	
	公告创建人名字	
	公告最近修改人		新增的
	公告最近一次修改时间	新增的
	公告状态	默认有效


6. 文件表
	文件id		主键自动生成
	文件名字	可以重复
	文件上传时间	
	文件上传路径	（后台使用uuid）
	文件描述
	上传文件用户名	
	文档最近修改人		新增的
	文档最近一次修改时间	新增的
	文件状态	默认有效
	FileItem对象
	
第二部分：系统设计：

1. 设计数据库对应的pojo类，以及dao层和service层的基本框架（引入BaseDao基类完成基本的增删改查功能），对dao层的方法以及
数据库连接工具类进行测试，确保dao层的操作没有问题

2. 根据前台页面的需求进行service层的功能完善，并且根据前台的查询条件分别创建Criteria类封装查询数据，改进dao层的查询功能

3. 创建servletContext级别的监听器，通过读取properties配置参数同时设置到serviceFactory类的形式来动态加载service层的实现类

4. 创建filter，完成编码过滤和登录权限判断的操作

5. 创建servlet层的控制器，访问servlet的具体方法使用servlet的通配符映射路径和servlet层的反射配合完成，同时创建自定义的Myexception类继承runtimeException

6. 完成前台页面的改进和后台功能的完善

第三部分：每个模块具体实现的功能：
1. user模块：
- 登录帐号或者密码输入错误，提示用户重新登录；
- 根据用户名和用户状态模糊查询，查询全部有效用户
- 前台可以进行用户全选操作，进行批量注销
- 更新用户数据，如果用户名改为其他已经存在的用户名，则不允许更改，同时提醒用户，且实现数据回显，修改成功提醒用户并自动跳转至首页
- 添加新用户，同样不允许添加相同名字的用户，并且提示用户，添加成功自动跳转至首页
- 使用自定义的分页助手实现分页功能

2. 部门模块：
- 根据部门名字和部门状态进行模糊查询以及全部有效部门的查询
- 实现前台页面的全选，以进行批量注销
- 修改和添加部门信息同user模块，不再赘述

3. 职位模块：
- 根据职位名称进行模糊查询
- 增加和修改职位信息同user模块，不再赘述

4. 员工模块：
- 通过ajax实现部门和职位的二级联动，后台通过sql语句拼接实现联合查询
- 员工的添加和修改不再进行相同名字的判断（因为员工是有可能同名的）

5. 文件上传和下载模块：
1. 文件上传使用ServletFileUpload类完成，同时对用户上传文件的后缀名，大小，总大小，缓存文件路径和大小做出限制；
	满足条件才能进行数据库的数据保存和硬盘上的文件保存
2. 文件的下载通过压缩工具类完成
3. 文件的更改不再赘述

6. 通告模块十分简单，且与user模块十分类似，故省略

第四部分：项目总结

1. 通过hrm项目，熟练掌握mysql的基本操作

2. 对mvc架构有一个清晰的认识和理解，每一层的设计和作用都能娓娓道来，熟练掌握面向接口编程，适配器设计模式

3. 项目具体亮点：
 	BaseDao基类的设计（泛型反射），ajax完成二级联动，自定义分页类实现分页功能，模糊查询和联合查询的完成，dbutils的各种操作（包括批量执行），
	前台全选批量注销，用户操作的提示信息展示，监听器实现配置式的service工厂和dao工厂，过滤器的编码设置和简单权限判断，
	自定义异常的使用，servlet层的反射调用，递归删除缓存工具类，压缩工具类，前台页面的设计和jstl标签，el表达式的熟练操控
	单文件上传和单文件下载（多文件的上传和下载请参考我的github帐号）

	最后：整个项目的代码已全部上传至我的github帐号（zc-cris），如果有不足的地方，请多多指教！
	                                        